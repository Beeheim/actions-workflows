name: Publish Mod

on:
  workflow_call:
    inputs:
      team:
        type: string
        description: "The Thunderstore team to publish the mod under"
        required: true
      community:
        type: string
        description: "The community to publish the mod under"
        required: true

jobs:
  publish:
    runs-on: ubuntu-latest
    steps:
      # Use checkout to publish the files in your repo
      - uses: actions/checkout@v4


      - uses: tibdex/github-app-token@v1
        id: get_installation_token
        with:
          app_id: ${{ vars.CI_APP_ID }}
          private_key: ${{ secrets.CI_TOKEN }}

      - uses: actions/checkout@v4
        with:
          repository: "beeheim/actions-workflows"
          path: cicd
          ref: ${{ (github.ref_name == inputs.test-branch-name) && inputs.test-branch-name  || 'main' }}
          token: ${{ steps.get_installation_token.outputs.token }}

      - name: install dependencies
        run: |
         cd cicd/scripts
         npm install fs path

      - name: Validate
        run: node cicd/scripts/validate.js

      - name: Save Github ref
        run: echo "github_ref=${{ github.ref_name }}" >> $GITHUB_OUTPUT

      - name: Extract name from manifest
        uses: sergeysova/jq-action@v2
        id: extract_modpack_name
        with:
          cmd: "jq .name modpack/manifest.json -r"

      - name: Save modpack name in github output
        id: get_modpack_name
        run: echo "name=${{ steps.extract_modpack_name.outputs.value }}" >> $GITHUB_OUTPUT

      - name: Strip 'v' from version tag
        id: strip_version
        run: |
          echo "version=$(echo ${{ github.ref_name }} | sed 's/v//')" >> $GITHUB_OUTPUT

      - name: Update version in manifest
        run: |
          jq '.version_number = "${{ steps.strip_version.outputs.version }}"' modpack/manifest.json > temp.json
          mv temp.json modpack/manifest.json
          cat modpack/manifest.json

      - name: Get modpack description
        id: get_modpack_description
        run: |
          description=$(jq -r '.description' modpack/manifest.json)
          echo "description=${description}" >> $GITHUB_OUTPUT

      - uses: vimtor/action-zip@v1.2
        with:
          files: modpack/
          dest: modpack.zip

      - name: Output Summary
        run: |
          echo "github_ref: ${{ github.ref_name }}"
          echo "name: ${{ steps.get_modpack_name.outputs.name }}"
          echo "version: ${{ steps.strip_version.outputs.version }}"
          echo "description: ${{ steps.get_modpack_description.outputs.description }}"

      - uses: GreenTF/upload-thunderstore-package@v4.2
        if: ${{ github.ref == 'main' }}
        with:
          namespace: ${{ inputs.team }} # the thunderstore 'team' to publish under
          description: ${{ steps.get_modpack_description.outputs.description }}
          token: ${{ secrets.THUNDERSTORE_TOKEN }}
          name: ${{ steps.get_modpack_name.outputs.name }} # the name of the package
          version: ${{ steps.strip_version.outputs.version }}
          community: ${{ inputs.community }}
          repo: thunderstore.io
          file: modpack.zip
          categories: | # <-- notice this pipe character
            modpacks
